<div class="page-header">
  <h1>Final Project Instructions
    <small>Rewrite this page with your API documentation.</small>
  </h1>
</div>

<div class="row">
  <div class="col-sm-8">
    <h2>In This Web Service</h2>

    <h3>
      Endpoint #1: Ship an item.
    </h3>

    <ol>
      <li>What HTTP request would be best?  Think about the URL, HTTP method, and data format.</li>
      <li>What response will you send back?  What data will you include?  Be sure to document the data structure that clients can expect.</li>
      <li>What error cases might you need to handle?  Think about possible HTTP status codes and how to document them here.</li>
    </ol>

    <h3>Endpoint #2: Query for quantity remaining.</h3>
    <ol>
      <li>What HTTP request would be best?  Think about the URL, HTTP method, and data format.</li>
      <li>In this request, I used <code>http://localhost:4000/on_hand?sku=#{product.sku}</code> to query the number of items left.</li>
      <li>The reponse is an key-value pair as {count: number}, we can fetch the number value by using "count"</li>
      <li>What error cases might you need to handle?  Think about possible HTTP status codes and how to document them here.</li>
    </ol>

    <h3>User Interface Implementation</h3>
    <ol>
      <li>Rewrite this page so that it becomes your API documentation for your service.</li>
      <li>Make the "Set Quantity" button work, so that the user can directly enter a new value.</li>
      <li>Make the "Delete Product" button work.</li>
      <li>Modify the New Product form to be boostrap-compliant.</li>
      <li>Make sure the complete sign in/sign flow works properly.</li>
    </ol>

    <h3>Consider The Following...</h3>
    <ol>
      <li>How will you help prevent unauthorized use of your API?</li>
      <li>You are free to modify everything about this app: the models, views, controllers, etc.</li>
      <li>Your app will partly be judged on its ease of use and readability, as you've seen in other real-world web services.</li>
    </ol>
  </div>
  <div class="col-sm-4 well">
    <h2>In Your Store App</h2>

    <ol>
      <li>Whenever a product is shown, also display the quantity remaining on hand.</li>
      <li>The app should NOT allow the user to purchase an item if the quantity remaining is zero.</li>
      <li>Your app must call the Shipper web service after a customer pays for an item and completes their order.</li>
      <li>Your app should handle and display any error codes received from your Shipper service.</li>
    <p>
      <strong>NOTE:</strong>
      You can start with your HW3 code, or you can start with original starting point for HW3.  If you start from the original HW3 repository, you do not need to implement credit card payments.  You can just stub that out, consider the item as paid, and focus on the shipment challenges in this assignment.
    </p>
  </div>
</div>
